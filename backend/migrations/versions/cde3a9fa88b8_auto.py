"""auto

Revision ID: cde3a9fa88b8
Revises: 5ce71490be7b
Create Date: 2024-02-15 16:22:02.130923

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'cde3a9fa88b8'
down_revision = '5ce71490be7b'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('admin_note', 'resource_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('admin_note', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('admin_note', 'last_updated',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False)
    op.alter_column('admin_note', 'note',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('alternative_augmentative', 'last_updated',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False)
    op.alter_column('alternative_augmentative', 'supports_questionnaire_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_constraint('alternative_augmentative_supports_questionnaire_id_fkey', 'alternative_augmentative', type_='foreignkey')
    op.create_foreign_key(None, 'alternative_augmentative', 'supports_questionnaire', ['supports_questionnaire_id'], ['id'], ondelete='CASCADE')
    op.alter_column('assistive_device', 'last_updated',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False)
    op.alter_column('assistive_device', 'supports_questionnaire_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_constraint('assistive_device_supports_questionnaire_id_fkey', 'assistive_device', type_='foreignkey')
    op.create_foreign_key(None, 'assistive_device', 'supports_questionnaire', ['supports_questionnaire_id'], ['id'], ondelete='CASCADE')
    op.add_column('category', sa.Column('hit_count', sa.Integer(), nullable=True))
    op.alter_column('category', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('category', 'last_updated',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False)
    op.alter_column('chain_questionnaire', 'last_updated',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False)
    op.alter_column('chain_questionnaire', 'time_on_task_ms',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               nullable=False)
    op.alter_column('chain_questionnaire', 'participant_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('chain_questionnaire', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('chain_session', 'last_updated',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False)
    op.alter_column('chain_session', 'time_on_task_ms',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               nullable=False)
    op.alter_column('chain_session', 'chain_questionnaire_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('chain_session', 'date',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False)
    op.drop_constraint('chain_session_chain_questionnaire_id_fkey', 'chain_session', type_='foreignkey')
    op.create_foreign_key(None, 'chain_session', 'chain_questionnaire', ['chain_questionnaire_id'], ['id'], ondelete='CASCADE')
    op.alter_column('chain_session_step', 'last_updated',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False)
    op.alter_column('chain_session_step', 'chain_step_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('chain_session_step', 'date',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False)
    op.drop_constraint('chain_session_step_chain_step_id_fkey', 'chain_session_step', type_='foreignkey')
    op.drop_constraint('chain_session_step_chain_session_id_fkey', 'chain_session_step', type_='foreignkey')
    op.create_foreign_key(None, 'chain_session_step', 'chain_session', ['chain_session_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'chain_session_step', 'chain_step', ['chain_step_id'], ['id'], ondelete='CASCADE')
    op.alter_column('chain_step', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('chain_step', 'instruction',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('chain_step', 'last_updated',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False)
    op.alter_column('challenging_behavior', 'last_updated',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False)
    op.alter_column('challenging_behavior', 'chain_session_step_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('challenging_behavior', 'time',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.drop_constraint('challenging_behavior_chain_session_step_id_fkey', 'challenging_behavior', type_='foreignkey')
    op.create_foreign_key(None, 'challenging_behavior', 'chain_session_step', ['chain_session_step_id'], ['id'], ondelete='CASCADE')
    op.alter_column('clinical_diagnoses_questionnaire', 'last_updated',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False)
    op.alter_column('clinical_diagnoses_questionnaire', 'time_on_task_ms',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               nullable=False)
    op.alter_column('clinical_diagnoses_questionnaire', 'participant_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('clinical_diagnoses_questionnaire', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('contact_questionnaire', 'last_updated',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False)
    op.alter_column('contact_questionnaire', 'time_on_task_ms',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               nullable=False)
    op.alter_column('contact_questionnaire', 'participant_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('contact_questionnaire', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('current_behaviors_dependent_questionnaire', 'last_updated',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False)
    op.alter_column('current_behaviors_dependent_questionnaire', 'time_on_task_ms',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               nullable=False)
    op.alter_column('current_behaviors_dependent_questionnaire', 'participant_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('current_behaviors_dependent_questionnaire', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('current_behaviors_self_questionnaire', 'last_updated',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False)
    op.alter_column('current_behaviors_self_questionnaire', 'time_on_task_ms',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               nullable=False)
    op.alter_column('current_behaviors_self_questionnaire', 'participant_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('current_behaviors_self_questionnaire', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('data_transfer_log', 'type',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('data_transfer_log', 'date_started',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False)
    op.alter_column('data_transfer_log', 'last_updated',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False)
    op.alter_column('data_transfer_log', 'total_records',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('data_transfer_log', 'alerts_sent',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('data_transfer_log_detail', 'data_transfer_log_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('data_transfer_log_detail', 'date_started',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False)
    op.alter_column('data_transfer_log_detail', 'last_updated',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False)
    op.alter_column('data_transfer_log_detail', 'class_name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('data_transfer_log_detail', 'successful',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('data_transfer_log_detail', 'success_count',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('data_transfer_log_detail', 'failure_count',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('demographics_questionnaire', 'last_updated',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False)
    op.alter_column('demographics_questionnaire', 'time_on_task_ms',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               nullable=False)
    op.alter_column('demographics_questionnaire', 'participant_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('demographics_questionnaire', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('developmental_questionnaire', 'last_updated',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False)
    op.alter_column('developmental_questionnaire', 'time_on_task_ms',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               nullable=False)
    op.alter_column('developmental_questionnaire', 'participant_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('developmental_questionnaire', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('education_dependent_questionnaire', 'last_updated',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False)
    op.alter_column('education_dependent_questionnaire', 'time_on_task_ms',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               nullable=False)
    op.alter_column('education_dependent_questionnaire', 'participant_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('education_dependent_questionnaire', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('education_self_questionnaire', 'last_updated',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False)
    op.alter_column('education_self_questionnaire', 'time_on_task_ms',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               nullable=False)
    op.alter_column('education_self_questionnaire', 'participant_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('education_self_questionnaire', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('email_log', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('email_log', 'type',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('email_log', 'tracking_code',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('email_log', 'viewed',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('email_log', 'date_viewed',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('email_log', 'last_updated',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False)
    op.alter_column('employment_questionnaire', 'last_updated',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False)
    op.alter_column('employment_questionnaire', 'time_on_task_ms',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               nullable=False)
    op.alter_column('employment_questionnaire', 'participant_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('employment_questionnaire', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('evaluation_history_dependent_questionnaire', 'last_updated',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False)
    op.alter_column('evaluation_history_dependent_questionnaire', 'time_on_task_ms',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               nullable=False)
    op.alter_column('evaluation_history_dependent_questionnaire', 'participant_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('evaluation_history_dependent_questionnaire', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('evaluation_history_self_questionnaire', 'last_updated',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False)
    op.alter_column('evaluation_history_self_questionnaire', 'time_on_task_ms',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               nullable=False)
    op.alter_column('evaluation_history_self_questionnaire', 'participant_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('evaluation_history_self_questionnaire', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.add_column('event', sa.Column('type', sa.String(), nullable=False))
    op.alter_column('event', 'date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('event_user', 'last_updated',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False)
    op.alter_column('home_dependent_questionnaire', 'last_updated',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False)
    op.alter_column('home_dependent_questionnaire', 'time_on_task_ms',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               nullable=False)
    op.alter_column('home_dependent_questionnaire', 'participant_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('home_dependent_questionnaire', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('home_self_questionnaire', 'last_updated',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False)
    op.alter_column('home_self_questionnaire', 'time_on_task_ms',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               nullable=False)
    op.alter_column('home_self_questionnaire', 'participant_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('home_self_questionnaire', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('housemate', 'last_updated',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False)
    op.alter_column('housemate', 'age',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_constraint('housemate_home_dependent_questionnaire_id_fkey', 'housemate', type_='foreignkey')
    op.drop_constraint('housemate_home_self_questionnaire_id_fkey', 'housemate', type_='foreignkey')
    op.create_foreign_key(None, 'housemate', 'home_dependent_questionnaire', ['home_dependent_questionnaire_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'housemate', 'home_self_questionnaire', ['home_self_questionnaire_id'], ['id'], ondelete='CASCADE')
    op.alter_column('identification_questionnaire', 'last_updated',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False)
    op.alter_column('identification_questionnaire', 'time_on_task_ms',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               nullable=False)
    op.alter_column('identification_questionnaire', 'participant_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('identification_questionnaire', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('identification_questionnaire', 'birthdate',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('investigator', 'last_updated',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False)
    op.alter_column('investigator', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('investigator', 'title',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.add_column('location', sa.Column('type', sa.String(), nullable=False))
    op.alter_column('location', 'street_address1',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('location', 'city',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('location', 'state',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('location', 'zip',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('medication', 'last_updated',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False)
    op.alter_column('medication', 'supports_questionnaire_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_constraint('medication_supports_questionnaire_id_fkey', 'medication', type_='foreignkey')
    op.create_foreign_key(None, 'medication', 'supports_questionnaire', ['supports_questionnaire_id'], ['id'], ondelete='CASCADE')
    op.alter_column('professional_profile_questionnaire', 'last_updated',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False)
    op.alter_column('professional_profile_questionnaire', 'time_on_task_ms',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               nullable=False)
    op.alter_column('professional_profile_questionnaire', 'participant_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('professional_profile_questionnaire', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('registration_questionnaire', 'last_updated',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False)
    op.alter_column('registration_questionnaire', 'time_on_task_ms',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               nullable=False)
    op.alter_column('registration_questionnaire', 'participant_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('registration_questionnaire', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('registration_questionnaire', 'event_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('registration_questionnaire', 'first_name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('registration_questionnaire', 'last_name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('registration_questionnaire', 'email',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('registration_questionnaire', 'zip_code',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('registration_questionnaire', 'relationship_to_autism',
               existing_type=postgresql.ARRAY(sa.VARCHAR()),
               nullable=False)
    op.alter_column('registration_questionnaire', 'marketing_channel',
               existing_type=postgresql.ARRAY(sa.VARCHAR()),
               nullable=False)
    op.alter_column('registration_questionnaire', 'newsletter_consent',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('resource', 'type',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('resource', 'title',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('resource', 'last_updated',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False)
    op.alter_column('resource', 'description',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('resource', 'website',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('resource', 'is_draft',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('resource', 'should_hide_related_resources',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('resource_category', 'last_updated',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False)
    op.alter_column('resource_category', 'type',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('resource_change_log', 'type',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('resource_change_log', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('resource_change_log', 'user_email',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('resource_change_log', 'resource_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('resource_change_log', 'resource_title',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('resource_change_log', 'last_updated',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False)
    op.alter_column('stardrive_participant', 'last_updated',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False)
    op.alter_column('stardrive_participant', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('stardrive_participant', 'relationship',
               existing_type=postgresql.ENUM('dependent', 'self_guardian', 'self_interested', 'self_participant', 'self_professional', name='relationship'),
               type_=sa.Enum('self_participant', 'self_guardian', 'dependent', 'self_professional', 'self_interested', name='relationship', native_enum=False),
               nullable=False)
    op.add_column('stardrive_user', sa.Column('token', sa.String(), nullable=False))
    op.add_column('stardrive_user', sa.Column('token_url', sa.String(), nullable=False))
    op.alter_column('stardrive_user', 'last_updated',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False)
    op.alter_column('stardrive_user', 'registration_date',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False)
    op.alter_column('stardrive_user', 'last_login',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True)
    op.alter_column('stardrive_user', 'email',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('stardrive_user', 'role',
               existing_type=postgresql.ENUM('admin', 'editor', 'researcher', 'test', 'user', name='role'),
               type_=sa.Enum('admin', 'test', 'researcher', 'editor', 'user', name='role', native_enum=False),
               nullable=False)
    op.alter_column('stardrive_user', 'email_verified',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('step_log', 'questionnaire_name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('step_log', 'questionnaire_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('step_log', 'flow',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('step_log', 'participant_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('step_log', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('step_log', 'date_completed',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False)
    op.alter_column('step_log', 'time_on_task_ms',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               nullable=False)
    op.alter_column('step_log', 'last_updated',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False)
    op.alter_column('study', 'title',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('study', 'last_updated',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False)
    op.alter_column('study', 'description',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('study', 'participant_description',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('study', 'benefit_description',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('study', 'coordinator_email',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('study', 'status',
               existing_type=postgresql.ENUM('currently_enrolling', 'study_in_progress', 'results_being_analyzed', 'study_results_published', name='status'),
               type_=sa.Enum('currently_enrolling', 'study_in_progress', 'results_being_analyzed', 'study_results_published', name='status', native_enum=False),
               nullable=False)
    op.alter_column('study_category', 'last_updated',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False)
    op.alter_column('study_investigator', 'last_updated',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False)
    op.alter_column('study_user', 'last_updated',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False)
    op.alter_column('study_user', 'status',
               existing_type=postgresql.ENUM('inquiry_sent', 'enrolled', name='study_user_status'),
               type_=sa.Enum('inquiry_sent', 'enrolled', name='studyuserstatus', native_enum=False),
               existing_nullable=True)
    op.alter_column('supports_questionnaire', 'last_updated',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False)
    op.alter_column('supports_questionnaire', 'time_on_task_ms',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               nullable=False)
    op.alter_column('supports_questionnaire', 'participant_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('supports_questionnaire', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('therapy', 'last_updated',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False)
    op.alter_column('therapy', 'supports_questionnaire_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_constraint('therapy_supports_questionnaire_id_fkey', 'therapy', type_='foreignkey')
    op.create_foreign_key(None, 'therapy', 'supports_questionnaire', ['supports_questionnaire_id'], ['id'], ondelete='CASCADE')
    op.alter_column('user_favorite', 'last_updated',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False)
    op.alter_column('user_favorite', 'type',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('usermeta', 'last_updated',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False)
    op.alter_column('zip_code', 'latitude',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('zip_code', 'longitude',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('zip_code', 'last_updated',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('zip_code', 'last_updated',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('zip_code', 'longitude',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('zip_code', 'latitude',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('usermeta', 'last_updated',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('user_favorite', 'type',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('user_favorite', 'last_updated',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.drop_constraint(None, 'therapy', type_='foreignkey')
    op.create_foreign_key('therapy_supports_questionnaire_id_fkey', 'therapy', 'supports_questionnaire', ['supports_questionnaire_id'], ['id'])
    op.alter_column('therapy', 'supports_questionnaire_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('therapy', 'last_updated',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('supports_questionnaire', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('supports_questionnaire', 'participant_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('supports_questionnaire', 'time_on_task_ms',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               nullable=True)
    op.alter_column('supports_questionnaire', 'last_updated',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('study_user', 'status',
               existing_type=sa.Enum('inquiry_sent', 'enrolled', name='studyuserstatus', native_enum=False),
               type_=postgresql.ENUM('inquiry_sent', 'enrolled', name='study_user_status'),
               existing_nullable=True)
    op.alter_column('study_user', 'last_updated',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('study_investigator', 'last_updated',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('study_category', 'last_updated',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('study', 'status',
               existing_type=sa.Enum('currently_enrolling', 'study_in_progress', 'results_being_analyzed', 'study_results_published', name='status', native_enum=False),
               type_=postgresql.ENUM('currently_enrolling', 'study_in_progress', 'results_being_analyzed', 'study_results_published', name='status'),
               nullable=True)
    op.alter_column('study', 'coordinator_email',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('study', 'benefit_description',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('study', 'participant_description',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('study', 'description',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('study', 'last_updated',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('study', 'title',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('step_log', 'last_updated',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('step_log', 'time_on_task_ms',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               nullable=True)
    op.alter_column('step_log', 'date_completed',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('step_log', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('step_log', 'participant_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('step_log', 'flow',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('step_log', 'questionnaire_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('step_log', 'questionnaire_name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('stardrive_user', 'email_verified',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('stardrive_user', 'role',
               existing_type=sa.Enum('admin', 'test', 'researcher', 'editor', 'user', name='role', native_enum=False),
               type_=postgresql.ENUM('admin', 'editor', 'researcher', 'test', 'user', name='role'),
               nullable=True)
    op.alter_column('stardrive_user', 'email',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('stardrive_user', 'last_login',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
    op.alter_column('stardrive_user', 'registration_date',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('stardrive_user', 'last_updated',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.drop_column('stardrive_user', 'token_url')
    op.drop_column('stardrive_user', 'token')
    op.alter_column('stardrive_participant', 'relationship',
               existing_type=sa.Enum('self_participant', 'self_guardian', 'dependent', 'self_professional', 'self_interested', name='relationship', native_enum=False),
               type_=postgresql.ENUM('dependent', 'self_guardian', 'self_interested', 'self_participant', 'self_professional', name='relationship'),
               nullable=True)
    op.alter_column('stardrive_participant', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('stardrive_participant', 'last_updated',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('resource_change_log', 'last_updated',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('resource_change_log', 'resource_title',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('resource_change_log', 'resource_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('resource_change_log', 'user_email',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('resource_change_log', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('resource_change_log', 'type',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('resource_category', 'type',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('resource_category', 'last_updated',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('resource', 'should_hide_related_resources',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('resource', 'is_draft',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('resource', 'website',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('resource', 'description',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('resource', 'last_updated',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('resource', 'title',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('resource', 'type',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('registration_questionnaire', 'newsletter_consent',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('registration_questionnaire', 'marketing_channel',
               existing_type=postgresql.ARRAY(sa.VARCHAR()),
               nullable=True)
    op.alter_column('registration_questionnaire', 'relationship_to_autism',
               existing_type=postgresql.ARRAY(sa.VARCHAR()),
               nullable=True)
    op.alter_column('registration_questionnaire', 'zip_code',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('registration_questionnaire', 'email',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('registration_questionnaire', 'last_name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('registration_questionnaire', 'first_name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('registration_questionnaire', 'event_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('registration_questionnaire', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('registration_questionnaire', 'participant_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('registration_questionnaire', 'time_on_task_ms',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               nullable=True)
    op.alter_column('registration_questionnaire', 'last_updated',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('professional_profile_questionnaire', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('professional_profile_questionnaire', 'participant_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('professional_profile_questionnaire', 'time_on_task_ms',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               nullable=True)
    op.alter_column('professional_profile_questionnaire', 'last_updated',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.drop_constraint(None, 'medication', type_='foreignkey')
    op.create_foreign_key('medication_supports_questionnaire_id_fkey', 'medication', 'supports_questionnaire', ['supports_questionnaire_id'], ['id'])
    op.alter_column('medication', 'supports_questionnaire_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('medication', 'last_updated',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('location', 'zip',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('location', 'state',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('location', 'city',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('location', 'street_address1',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('location', 'type')
    op.alter_column('investigator', 'title',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('investigator', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('investigator', 'last_updated',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('identification_questionnaire', 'birthdate',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('identification_questionnaire', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('identification_questionnaire', 'participant_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('identification_questionnaire', 'time_on_task_ms',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               nullable=True)
    op.alter_column('identification_questionnaire', 'last_updated',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.drop_constraint(None, 'housemate', type_='foreignkey')
    op.drop_constraint(None, 'housemate', type_='foreignkey')
    op.create_foreign_key('housemate_home_self_questionnaire_id_fkey', 'housemate', 'home_self_questionnaire', ['home_self_questionnaire_id'], ['id'])
    op.create_foreign_key('housemate_home_dependent_questionnaire_id_fkey', 'housemate', 'home_dependent_questionnaire', ['home_dependent_questionnaire_id'], ['id'])
    op.alter_column('housemate', 'age',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('housemate', 'last_updated',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('home_self_questionnaire', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('home_self_questionnaire', 'participant_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('home_self_questionnaire', 'time_on_task_ms',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               nullable=True)
    op.alter_column('home_self_questionnaire', 'last_updated',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('home_dependent_questionnaire', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('home_dependent_questionnaire', 'participant_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('home_dependent_questionnaire', 'time_on_task_ms',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               nullable=True)
    op.alter_column('home_dependent_questionnaire', 'last_updated',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('event_user', 'last_updated',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('event', 'date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.drop_column('event', 'type')
    op.alter_column('evaluation_history_self_questionnaire', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('evaluation_history_self_questionnaire', 'participant_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('evaluation_history_self_questionnaire', 'time_on_task_ms',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               nullable=True)
    op.alter_column('evaluation_history_self_questionnaire', 'last_updated',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('evaluation_history_dependent_questionnaire', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('evaluation_history_dependent_questionnaire', 'participant_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('evaluation_history_dependent_questionnaire', 'time_on_task_ms',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               nullable=True)
    op.alter_column('evaluation_history_dependent_questionnaire', 'last_updated',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('employment_questionnaire', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('employment_questionnaire', 'participant_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('employment_questionnaire', 'time_on_task_ms',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               nullable=True)
    op.alter_column('employment_questionnaire', 'last_updated',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('email_log', 'last_updated',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('email_log', 'date_viewed',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('email_log', 'viewed',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('email_log', 'tracking_code',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('email_log', 'type',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('email_log', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('education_self_questionnaire', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('education_self_questionnaire', 'participant_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('education_self_questionnaire', 'time_on_task_ms',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               nullable=True)
    op.alter_column('education_self_questionnaire', 'last_updated',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('education_dependent_questionnaire', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('education_dependent_questionnaire', 'participant_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('education_dependent_questionnaire', 'time_on_task_ms',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               nullable=True)
    op.alter_column('education_dependent_questionnaire', 'last_updated',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('developmental_questionnaire', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('developmental_questionnaire', 'participant_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('developmental_questionnaire', 'time_on_task_ms',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               nullable=True)
    op.alter_column('developmental_questionnaire', 'last_updated',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('demographics_questionnaire', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('demographics_questionnaire', 'participant_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('demographics_questionnaire', 'time_on_task_ms',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               nullable=True)
    op.alter_column('demographics_questionnaire', 'last_updated',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('data_transfer_log_detail', 'failure_count',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('data_transfer_log_detail', 'success_count',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('data_transfer_log_detail', 'successful',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('data_transfer_log_detail', 'class_name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('data_transfer_log_detail', 'last_updated',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('data_transfer_log_detail', 'date_started',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('data_transfer_log_detail', 'data_transfer_log_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('data_transfer_log', 'alerts_sent',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('data_transfer_log', 'total_records',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('data_transfer_log', 'last_updated',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('data_transfer_log', 'date_started',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('data_transfer_log', 'type',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('current_behaviors_self_questionnaire', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('current_behaviors_self_questionnaire', 'participant_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('current_behaviors_self_questionnaire', 'time_on_task_ms',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               nullable=True)
    op.alter_column('current_behaviors_self_questionnaire', 'last_updated',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('current_behaviors_dependent_questionnaire', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('current_behaviors_dependent_questionnaire', 'participant_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('current_behaviors_dependent_questionnaire', 'time_on_task_ms',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               nullable=True)
    op.alter_column('current_behaviors_dependent_questionnaire', 'last_updated',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('contact_questionnaire', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('contact_questionnaire', 'participant_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('contact_questionnaire', 'time_on_task_ms',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               nullable=True)
    op.alter_column('contact_questionnaire', 'last_updated',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('clinical_diagnoses_questionnaire', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('clinical_diagnoses_questionnaire', 'participant_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('clinical_diagnoses_questionnaire', 'time_on_task_ms',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               nullable=True)
    op.alter_column('clinical_diagnoses_questionnaire', 'last_updated',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.drop_constraint(None, 'challenging_behavior', type_='foreignkey')
    op.create_foreign_key('challenging_behavior_chain_session_step_id_fkey', 'challenging_behavior', 'chain_session_step', ['chain_session_step_id'], ['id'])
    op.alter_column('challenging_behavior', 'time',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('challenging_behavior', 'chain_session_step_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('challenging_behavior', 'last_updated',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('chain_step', 'last_updated',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('chain_step', 'instruction',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('chain_step', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_constraint(None, 'chain_session_step', type_='foreignkey')
    op.drop_constraint(None, 'chain_session_step', type_='foreignkey')
    op.create_foreign_key('chain_session_step_chain_session_id_fkey', 'chain_session_step', 'chain_session', ['chain_session_id'], ['id'])
    op.create_foreign_key('chain_session_step_chain_step_id_fkey', 'chain_session_step', 'chain_step', ['chain_step_id'], ['id'])
    op.alter_column('chain_session_step', 'date',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('chain_session_step', 'chain_step_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('chain_session_step', 'last_updated',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.drop_constraint(None, 'chain_session', type_='foreignkey')
    op.create_foreign_key('chain_session_chain_questionnaire_id_fkey', 'chain_session', 'chain_questionnaire', ['chain_questionnaire_id'], ['id'])
    op.alter_column('chain_session', 'date',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('chain_session', 'chain_questionnaire_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('chain_session', 'time_on_task_ms',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               nullable=True)
    op.alter_column('chain_session', 'last_updated',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('chain_questionnaire', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('chain_questionnaire', 'participant_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('chain_questionnaire', 'time_on_task_ms',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               nullable=True)
    op.alter_column('chain_questionnaire', 'last_updated',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('category', 'last_updated',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('category', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('category', 'hit_count')
    op.drop_constraint(None, 'assistive_device', type_='foreignkey')
    op.create_foreign_key('assistive_device_supports_questionnaire_id_fkey', 'assistive_device', 'supports_questionnaire', ['supports_questionnaire_id'], ['id'])
    op.alter_column('assistive_device', 'supports_questionnaire_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('assistive_device', 'last_updated',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.drop_constraint(None, 'alternative_augmentative', type_='foreignkey')
    op.create_foreign_key('alternative_augmentative_supports_questionnaire_id_fkey', 'alternative_augmentative', 'supports_questionnaire', ['supports_questionnaire_id'], ['id'])
    op.alter_column('alternative_augmentative', 'supports_questionnaire_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('alternative_augmentative', 'last_updated',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('admin_note', 'note',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('admin_note', 'last_updated',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('admin_note', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('admin_note', 'resource_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    # ### end Alembic commands ###
